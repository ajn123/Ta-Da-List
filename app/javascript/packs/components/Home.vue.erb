<template> 

  <div>
  
  <div v-if="loggedIn" id="app">

    <div class="alert alert-info">
      Your Authorization Token is: "{{ this.$store.state.user.token}}:{{ this.$store.state.user.api_key }}"
    </div>

    <h1>
      Lists:
    </h1>
    <ol class="list-group">
      <li class="list-group-item" v-for="(list, idx) in this.$store.state.lists">
        <h1>
          {{ list.title }} 
        </h1>
        <br />
        <h3>
          Items: {{ list.items.length }}
        </h3>
          <div style="margin:10px" class="card" v-for="(item,index) in list.items">
            <div class="card-body">
              
              <h5 class="card-title"> 
                {{item.title}} 
              </h5>
              <p class="card-text">
              {{ item.content}}
              </p>
              <h6 class="card-subtitle mb-2">
                Due: {{ item.due_date }}
              </h6>
              <h6>
                <input type="checkbox" v-model="item.completed"
                @click="completeItem(idx,index)">
                Completed: {{ item.completed }}
              </h6>
            </div>
          </div>
      </li>
    </ol>

      <div class="list-form">
        
        <label for="">List Title: </label>
        <input v-model="initialList.title" class="form-control">
        <div v-for="(itemArray, itemCount) in initialList.itemsArray" class="form-group">
          <label > Item {{itemCount + 1}} Title: </label>
          <input v-model="itemArray.title" class="form-control">
          <label > Item {{itemCount + 1}} Content: </label>
          <input v-model="itemArray.content" class="form-control">

          <label for="">Due Date: </label>
          <input type="date" class="form-control" value="<%= Date.today.to_s %>" v-model="itemArray.due_date"/>
          <button class="btn btn-danger" @click="removeItem(itemCount)">REMOVE Item {{itemCount + 1}}</button>
        </div>

        <button class="btn btn-secondary" @click="addItem">Add Item</button>

        <button v-show="canSubmit" class="btn-lg btn-block btn-primary" @click="submitList">Submit List</button>
      </div>
    </div>
    <div v-else>
      <h3>
        You need to sign in first to view your list.
      </h3>
    </div>
  </div>

</template>



<script>
import axios from "axios"
import store from "../vuex"
  
    export default {
      data: function() {
        return { 
        lists: [],
        initialList: {title: "", items: 0, itemsArray: []}};
      },
      created: function() {
      },
    methods: {
      completeItem: function(listIndex, itemIndex) {
      this.lists[listIndex].items.splice(itemIndex,1); 
      // API Call Here TODO

      },
      removeItem: function(index) {
        this.initialList.itemsArray.splice(index,1);
        this.initialList.items -= 1;
      },
      addToCart: function() {
        this.cart.push(this.product.id); 
      },
      addItem: function() {
        this.initialList.items += 1;
        this.initialList.itemsArray.push({ title: "", content: "", due_date: "" });
      },
      submitList: function() {

        function pushListNow(response) {
          store.commit('pushList', response.data.list);
        }

        axios.post("/api/lists.json", { list: {title: this.initialList.title,
                                        items_attributes: this.initialList.itemsArray} },
          { 
            auth: 
            {
              username: this.$store.state.user.token, 
              password: this.$store.state.user.api_key
            }
          }
        
        ).then(pushListNow).catch(function(error) {
          console.log(error); 
        });
      },
      
    },
    computed: {
      canSubmit: function() {
        return this.initialList.title.length > 0;
      },
      loggedIn() {
        return this.$store.state.user.api_key != null;
      },
    },
    channels: {
      ListChannel: {
        received(data) {
          if (data.action == "DELETE") {
            let idx = _.findIndex(this.lists, function(o) {
              return o.id == data.id;}); 
            
            this.lists.splice(idx,1); 
          }
          else if(data.action == "ERROR") {
            alert(data.errors); 
            
          }
          else {
            console.log(data.list); 
            this.lists.push(data.list);
          }
        }
      }
    },
    mounted() {
      this.$cable.subscribe({channel: 'ListChannel'});
    }
  }


</script>
